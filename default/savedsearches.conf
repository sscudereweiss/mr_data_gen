[EDU Nagios JVM Issues Clone]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-39 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 \
    [| makeresults count=1 \
    | streamstats count \
    | eval num = count % 1 \
    | eval count = 44 + num \
    | eval ping = round((random()%3+1)/1000,3) \
    | eval ping2= 0.000 \
    | eval rta = 1.320000 + (random()%10/1000) \
    | eval rta_rounded=round(rta,2) \
    | eval server="EDU_DC_1_Course-Picker-".count \
    | eval host=server \
    | eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tCheck Apache JServ Port\t".$ping$."\t".$ping2$."\tconnect to address 13.57.15.98 and port 8009: Connection refused\t" \
    | fields - count - ping - ping2 - rta - rta_rounded - server \
    | map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""] \
    [| makeresults count=1 \
    | streamstats count \
    | eval num = count % 1 \
    | eval count = 44 + num \
    | eval ping = round((random()%3+1)/1000,3) \
    | eval ping2= 0.000 \
    | eval rta = 1.320000 + (random()%10/1000) \
    | eval rta_rounded=round(rta,2) \
    | eval server="EDU_DC_1_Course-Picker-".count \
    | eval host=server \
    | eval logline2="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping\t".$ping$."\t".$ping2$."\tPING CRITICAL - Packet loss = 100%\trta=".$rta$."ms;10.000000;20.000000;0.000000 pl=100%;2;5;0" \
    | map search="| makeresults count=1 | eval _raw=$logline2$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""] \
    [| makeresults count=1 \
    | streamstats count \
    | eval num = count % 1 \
    | eval count = 44 + num \
    | eval ping = round((random()%3+1)/1000,3) \
    | eval ping2= 0.000 \
    | eval rta = 1.320000 + (random()%10/1000) \
    | eval rta_rounded=round(rta,2) \
    | eval server="EDU_DC_2_Course-Picker-".count \
    | eval host=server \
    | eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tCheck Apache JServ Port\t".$ping$."\t".$ping2$."\tconnect to address 13.57.15.99 and port 8009: Connection refused\t" \
    | fields - count - ping - ping2 - rta - rta_rounded - server \
    | map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""] \
    [| makeresults count=1 \
    | streamstats count \
    | eval num = count % 1 \
    | eval count = 44 + num \
    | eval ping = round((random()%3+1)/1000,3) \
    | eval ping2= 0.000 \
    | eval rta = 1.320000 + (random()%10/1000) \
    | eval rta_rounded=round(rta,2) \
    | eval server="EDU_DC_2_Course-Picker-".count \
    | eval host=server \
    | eval logline2="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping\t".$ping$."\t".$ping2$."\tPING CRITICAL - Packet loss = 100%\trta=".$rta$."ms;10.000000;20.000000;0.000000 pl=100%;2;5;0" \
    | map search="| makeresults count=1 | eval _raw=$logline2$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""]
workload_pool = undefined

[EDU Nagios Stable Alerts]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-39 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=2 \
| streamstats count \
| eval num = count % 2 \
| eval count = 40 + num \
| eval ping = 4.013+(random()%10/1000) \
| eval ping2= round((random()%3+1)/1000,3) \
| eval rta = 1.320000 + (random()%10/1000) \
| eval rta_rounded=round(rta,2) \
| eval server="EDU_DC_1_MySQL-".count\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping \t".$ping$."\t".$ping2$."\tPING OK - Packet loss = 0%, RTA = ".$rta_rounded$." ms\trta=".$rta$."ms;10.000000;20.000000;0.000000 pl=0%;2;5;0" \
| fields - count - ping - ping2 - rta - rta_rounded - server \
| map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\" testmode=false"
workload_pool = undefined

[EDU Nagios Unstable Alerts]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 40-59 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=2\
| streamstats count \
| eval num = count % 2 \
| eval count = 40 + num \
| eval ping = (random()%10/1000) \
| eval rta = 1.320000 + (random()%10/1000) \
| eval rta_rounded=round(rta,2) \
| eval server="EDU_DC_1_MySQL-".count\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tWebserver Port Ping\t0.006\t0.000\tHTTP CRITICAL: HTTP/1.1 503 Service Unavailable - 502 bytes in 0.003 second response time\ttime=0.001294s;;;0.000000 size=502B;;;0" \
| fields - count - ping - rta - rta_rounded - server \
| map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\" testmode=false"
workload_pool = undefined

[Hi ED RUM Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 \
| eval operationrand=random()%7 \
| eval metric_name:rum.page_view.count = random()%15+315 \
| eval metric_name:rum.client_error.count = ('metric_name:rum.page_view.count'/100)*((random()%10)+1) \
| eval metric_name:rum.page_view.time.ns.p75 = random()%15+1200 \
| eval metric_name:rum.resource_request.count = random()%15+500\
| eval metric_name:rum.webvitals_lcp.time.ns.p75 = random()%15+500\
| eval metric_name:rum.resource_request.time.ns.p75 = random()%15+2060 \
| eval metric_name:rum.webvitals_fid.time.ns.p75 = (1 + random()%1000/1000) \
| eval metric_name:rum.webvitals_cls.score.p75 = random()%100/1000 \
| eval app="course-registration" \
| eval computationId="FskgDsKA4AQ" \
| eval country="USA" \
| eval sf_environment="course-registration" | eval nodetyperand=random()%2 | eval operationrand=random()%7 \
| eval sf_node_type=case(nodetyperand==0,"provider", nodetyperand==1,"view") | eval operationrand=random()%7 \
| eval sf_operation=case(operationrand==0, "HTTP POST", operationrand==1, "console.error", operationrand==2, "documentFetch", operationrand==3, "documentLoad", operationrand==4, "onerror", operationrand==5, "resourceFetch", operationrand==6, "webvitals") \
| eval sf_organizationID="FgpBtZ0A0AA" \
| eval sf_product="web" \
| eval sf_realm="us1" \
| eval sf_resolutionMs=30000 \
| eval sf_ua_browsername="Chrome" \
| eval sf_ua_osname="Mac OS X" \
| eval entity_type="RUM Browser Metrics" \
| fields - operationrand - nodetyperand\
| mcollect index=sim_metrics

[Hi-ED DC 1 Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search
schedule_priority = highest
search = | makeresults count=1 `generate_linux_entities(4, \"EDU_DC_1_Authorization\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"EDU_DC_1_MySQL\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"EDU_DC_1_Course-Picker\", \"itsi_im_metrics\")` `generate_linux_entities(2, \"EDU_DC_1_Load-Balancer\", \"itsi_im_metrics\")` `generate_windows_entities(4, \"EDU_DC_1_Windows-Host\", \"itsi_im_metrics\")`

[Hi-ED DC 2 Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search
schedule_priority = highest
search = | makeresults count=1 `generate_linux_entities(4, \"EDU_DC_2_Authorization\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"EDU_DC_2_MySQL\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"EDU_DC_2_Course-Picker\", \"itsi_im_metrics\")` `generate_linux_entities(2, \"EDU_DC_2_Load-Balancer\", \"itsi_im_metrics\")` `generate_windows_entities(4, \"EDU_DC_2_Windows-Host\", \"itsi_im_metrics\")`

[Nagios Event Storm]
search = | makeresults count=500 \
| streamstats count \
| eval num = count \
| eval ping = 10.000+(random()%10/1000) \
| eval ping2 = round((random()%3+1)/1000,3) \
| eval host="ip-172-31-0-146.us-west-1.compute.internal" \
| lookup eventstorm_hosts.csv INDEX AS num OUTPUT HOST as server \
| eval logline="[SERVICEPERFDATA]\t1651586032\t".$server$."\tPING DEVICES\t".$ping$."\t".$ping2$."\tPING CRITICAL - Packet loss = 100%\trta=20.000000ms;10.000000;20.000000;0.000000 pl=100%;2;5;0" \
| fields - count - num - ping - ping2 - server \
| map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\"" maxsearches=500

[Nagios Event Storm 2]
search = | makeresults count=500 \
| streamstats count \
| eval num = count \
| eval ping = 10.000+(random()%10/1000) \
| eval ping2 = round((random()%3+1)/1000,3) \
| eval host="ip-172-31-0-146.us-west-1.compute.internal" \
| lookup eventstorm_hosts.csv INDEX AS num OUTPUT HOST as server \
| eval logline="[SERVICEPERFDATA]\t1651585961\t".$server$."\t SSH\t".$ping$."\t".$ping2$."\tCRITICAL - Socket timeout\t" \
| fields - count - num - ping - ping2 - server \
| map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\"" maxsearches=500
workload_pool = undefined

[Nagios JVM Issues]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-39 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = | makeresults count=1 \
    [| makeresults count=1 \
    | streamstats count \
    | eval num = count % 1 \
    | eval count = 44 + num \
    | eval ping = round((random()%3+1)/1000,3) \
    | eval ping2= 0.000 \
    | eval rta = 1.320000 + (random()%10/1000) \
    | eval rta_rounded=round(rta,2) \
    | eval server="jvm-prd-".count.".internal.stsc.com" \
    | eval host="ip-172-31-0-146.us-west-1.compute.internal" \
    | eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tCheck Apache JServ Port\t".$ping$."\t".$ping2$."\tconnect to address 13.57.15.99 and port 8009: Connection refused\t" \
    | fields - count - ping - ping2 - rta - rta_rounded - server \
    | map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""] \
    [| makeresults count=1 \
    | streamstats count \
    | eval num = count % 1 \
    | eval count = 44 + num \
    | eval ping = round((random()%3+1)/1000,3) \
    | eval ping2= 0.000 \
    | eval rta = 1.320000 + (random()%10/1000) \
    | eval rta_rounded=round(rta,2) \
    | eval server="jvm-prd-".count.".internal.stsc.com" \
    | eval host="ip-172-31-0-146.us-west-1.compute.internal" \
    | eval logline2="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping\t".$ping$."\t".$ping2$."\tPING CRITICAL - Packet loss = 100%\trta=".$rta$."ms;10.000000;20.000000;0.000000 pl=100%;2;5;0" \
    | map search="| makeresults count=1 | eval _raw=$logline2$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""]
workload_pool = undefined

[Nagios Stable Alerts]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-39 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = | makeresults count=2 \
| streamstats count \
| eval num = count % 2 \
| eval count = 40 + num \
| eval ping = 4.013+(random()%10/1000) \
| eval ping2= round((random()%3+1)/1000,3) \
| eval rta = 1.320000 + (random()%10/1000) \
| eval rta_rounded=round(rta,2) \
| eval server="web-prd-".count.".internal.stsc.com" \
| eval host="ip-172-31-0-146.us-west-1.compute.internal" \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping \t".$ping$."\t".$ping2$."\tPING OK - Packet loss = 0%, RTA = ".$rta_rounded$." ms\trta=".$rta$."ms;10.000000;20.000000;0.000000 pl=0%;2;5;0" \
| fields - count - ping - ping2 - rta - rta_rounded - server \
| map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\" testmode=false"
workload_pool = undefined

[Nagios Unstable Alerts]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 40-59 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = | makeresults count=2\
| streamstats count \
| eval num = count % 2 \
| eval count = 40 + num \
| eval ping = (random()%10/1000) \
| eval rta = 1.320000 + (random()%10/1000) \
| eval rta_rounded=round(rta,2) \
| eval server="web-prd-".count.".internal.stsc.com" \
| eval host="ip-172-31-0-146.us-west-1.compute.internal" \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tWebserver Port Ping\t0.006\t0.000\tHTTP CRITICAL: HTTP/1.1 503 Service Unavailable - 502 bytes in 0.003 second response time\ttime=0.001294s;;;0.000000 size=502B;;;0" \
| fields - count - ping - rta - rta_rounded - server \
| map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\" testmode=false"
workload_pool = undefined

[RUM Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 \
| eval operationrand=random()%7 \
| eval metric_name:rum.page_view.count = random()%15+315 \
| eval metric_name:rum.client_error.count = ('metric_name:rum.page_view.count'/100)*((random()%10)+1) \
| eval metric_name:rum.page_view.time.ns.p75 = random()%15+1200 \
| eval metric_name:rum.resource_request.count = random()%15+500\
| eval metric_name:rum.webvitals_lcp.time.ns.p75 = random()%15+500\
| eval metric_name:rum.resource_request.time.ns.p75 = random()%15+2060 \
| eval metric_name:rum.webvitals_fid.time.ns.p75 = (1 + random()%1000/1000) \
| eval metric_name:rum.webvitals_cls.score.p75 = random()%100/1000 \
| eval app="sgsw-rum-app" \
| eval computationId="FskgDsKA4AQ" \
| eval country="USA" \
| eval sf_environment="sgsw-apm-app" | eval nodetyperand=random()%2 | eval operationrand=random()%7 \
| eval sf_node_type=case(nodetyperand==0,"provider", nodetyperand==1,"view") | eval operationrand=random()%7 \
| eval sf_operation=case(operationrand==0, "HTTP POST", operationrand==1, "console.error", operationrand==2, "documentFetch", operationrand==3, "documentLoad", operationrand==4, "onerror", operationrand==5, "resourceFetch", operationrand==6, "webvitals") \
| eval sf_organizationID="FgpBtZ0A0AA" \
| eval sf_product="web" \
| eval sf_realm="us1" \
| eval sf_resolutionMs=30000 \
| eval sf_ua_browsername="Chrome" \
| eval sf_ua_osname="Mac OS X" \
| eval entity_type="RUM Browser Metrics" \
| fields - operationrand - nodetyperand\
| mcollect index=sim_metrics

[SLG DC 1 Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search
schedule_priority = highest
search = | makeresults count=1 `generate_linux_entities(4, \"SLG_DC_1_Authorization\", \"itsi_im_metrics\")` `generate_linux_entities_unstable(4, \"SLG_DC_1_MySQL\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"SLG_DC_1_License-Class-Selector\", \"itsi_im_metrics\")` `generate_linux_entities(2, \"SLG_DC_1_Load-Balancer\", \"itsi_im_metrics\")` `generate_windows_entities(4, \"SLG_DC_1_Windows-Host\", \"itsi_im_metrics\")`

[SLG DC 2 Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search
schedule_priority = highest
search = | makeresults count=1 `generate_linux_entities(4, \"SLG_DC_2_Authorization\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"SLG_DC_2_MySQL\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"SLG_DC_2_License-Class-Selector\", \"itsi_im_metrics\")` `generate_linux_entities(2, \"SLG_DC_2_Load-Balancer\", \"itsi_im_metrics\")` `generate_windows_entities(4, \"SLG_DC_2_Windows-Host\", \"itsi_im_metrics\")`

[SLG Nagios JVM Issues]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-39 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 \
    [| makeresults count=1 \
    | streamstats count \
    | eval num = count % 1 \
    | eval count = 44 + num \
    | eval ping = round((random()%3+1)/1000,3) \
    | eval ping2= 0.000 \
    | eval rta = 1.320000 + (random()%10/1000) \
    | eval rta_rounded=round(rta,2) \
    | eval server="SLG_DC_1_License-Class-Selector-".count \
    | eval host=server \
    | eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tCheck Apache JServ Port\t".$ping$."\t".$ping2$."\tconnect to address 13.57.15.98 and port 8009: Connection refused\t" \
    | fields - count - ping - ping2 - rta - rta_rounded - server \
    | map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""] \
    [| makeresults count=1 \
    | streamstats count \
    | eval num = count % 1 \
    | eval count = 44 + num \
    | eval ping = round((random()%3+1)/1000,3) \
    | eval ping2= 0.000 \
    | eval rta = 1.320000 + (random()%10/1000) \
    | eval rta_rounded=round(rta,2) \
    | eval server="SLG_DC_1_License-Class-Selector-".count \
    | eval host=server \
    | eval logline2="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping\t".$ping$."\t".$ping2$."\tPING CRITICAL - Packet loss = 100%\trta=".$rta$."ms;10.000000;20.000000;0.000000 pl=100%;2;5;0" \
    | map search="| makeresults count=1 | eval _raw=$logline2$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""] \
    [| makeresults count=1 \
    | streamstats count \
    | eval num = count % 1 \
    | eval count = 44 + num \
    | eval ping = round((random()%3+1)/1000,3) \
    | eval ping2= 0.000 \
    | eval rta = 1.320000 + (random()%10/1000) \
    | eval rta_rounded=round(rta,2) \
    | eval server="SLG_DC_2_License-Class-Selector-".count \
    | eval host=server \
    | eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tCheck Apache JServ Port\t".$ping$."\t".$ping2$."\tconnect to address 13.57.15.99 and port 8009: Connection refused\t" \
    | fields - count - ping - ping2 - rta - rta_rounded - server \
    | map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""] \
    [| makeresults count=1 \
    | streamstats count \
    | eval num = count % 1 \
    | eval count = 44 + num \
    | eval ping = round((random()%3+1)/1000,3) \
    | eval ping2= 0.000 \
    | eval rta = 1.320000 + (random()%10/1000) \
    | eval rta_rounded=round(rta,2) \
    | eval server="SLG_DC_2_License-Class-Selector-".count \
    | eval host=server \
    | eval logline2="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping\t".$ping$."\t".$ping2$."\tPING CRITICAL - Packet loss = 100%\trta=".$rta$."ms;10.000000;20.000000;0.000000 pl=100%;2;5;0" \
    | map search="| makeresults count=1 | eval _raw=$logline2$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""]
workload_pool = undefined

[SLG Nagios Stable Alerts]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-39 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=2 \
| streamstats count \
| eval num = count % 2 \
| eval count = 40 + num \
| eval ping = 4.013+(random()%10/1000) \
| eval ping2= round((random()%3+1)/1000,3) \
| eval rta = 1.320000 + (random()%10/1000) \
| eval rta_rounded=round(rta,2) \
| eval server="SLG_DC_1_MySQL-".count\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping \t".$ping$."\t".$ping2$."\tPING OK - Packet loss = 0%, RTA = ".$rta_rounded$." ms\trta=".$rta$."ms;10.000000;20.000000;0.000000 pl=0%;2;5;0" \
| fields - count - ping - ping2 - rta - rta_rounded - server \
| map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\" testmode=false"
workload_pool = undefined

[SLG Nagios Unstable Alerts]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 40-59 * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=2\
| streamstats count \
| eval num = count % 2 \
| eval count = 40 + num \
| eval ping = (random()%10/1000) \
| eval rta = 1.320000 + (random()%10/1000) \
| eval rta_rounded=round(rta,2) \
| eval server="EDU_DC_1_MySQL-".count\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tWebserver Port Ping\t0.006\t0.000\tHTTP CRITICAL: HTTP/1.1 503 Service Unavailable - 502 bytes in 0.003 second response time\ttime=0.001294s;;;0.000000 size=502B;;;0" \
| fields - count - ping - rta - rta_rounded - server \
| map search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\" testmode=false"
workload_pool = undefined

[SLG RUM Generator]
display.page.search.mode = fast
search = | makeresults count=1 \
| eval operationrand=random()%7 \
| eval nodetyperand=random()%2 \
| eval metric_name:rum.page_view.count = random()%1000 \
| eval metric_name:rum.client_error.count = round('metric_name:rum.page_view.count'/10000) \
| eval metric_name:rum.page_view.time.ns.p75 = random()%4+5 \
| eval metric_name:rum.resource_request.count = (random()%100)/100 \
| eval metric_name:rum.webvitals_lcp.time.ns.p75 = random()%50+400 \
| eval metric_name:rum.resource_request.time.ns.p75 = random()%5+4\
| eval metric_name:rum.webvitals_fid.time.ns.p75 = (1 + random()%1000/1000) \
| eval metric_name:rum.webvitals_cls.score.p75 = random()%1000/1000 \
| eval app="license-renewal" \
| eval computationId="FskgDsKA4AQ" \
| eval country="USA" \
| eval sf_environment="license-renewal"\
| eval sf_node_type=case(nodetyperand==0,"provider", nodetyperand==1,"view")\
| eval sf_operation=case(operationrand==0, "HTTP POST", operationrand==1, "console.error", operationrand==2, "documentFetch", operationrand==3, "documentLoad", operationrand==4, "onerror", operationrand==5, "resourceFetch", operationrand==6, "webvitals") \
| eval sf_organizationID="FgpBtZ0A0AA" \
| eval sf_product="web" \
| eval sf_realm="us1" \
| eval sf_resolutionMs=30000 \
| eval sf_ua_browsername="Chrome" \
| eval sf_ua_osname="Mac OS X" \
| eval entity_type="RUM Browser Metrics" \
| fields - operationrand - nodetyperand\
| mcollect index=sim_metrics

[Test Entity Generator Linux/Unix]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search
schedule_priority = highest
search = | makeresults count=1 `generate_linux_entities(4, \"SLG_DC_1_Authorization\", \"itsi_im_metrics\")` `generate_linux_entities_unstable(4, \"SLG_DC_1_MySQL\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"SLG_DC_1_License-Class-Selector\", \"itsi_im_metrics\")` `generate_linux_entities(2, \"SLG_DC_1_Load-Balancer\", \"itsi_im_metrics\")`

[Test Entity Generator Windows]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search
schedule_priority = highest
search = | makeresults count=1 `generate_windows_entities(4, \"SLG_DC_1_Windows-Host\", \"itsi_im_metrics\")`

[default]

[hi_ed_mysql_error_generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-39 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_view = search
search = | makeresults count=100 \
| streamstats count \
| eval count = (count % 4) + 1\
| eval count = substr("00", 0, max(2-len(count), 0)) . count \
| eval tmphost="EDU_DC_1_MySQL-".count \
| eval logline=strftime(_time, "%Y/%m/%d %H:%M:%S") +" [CRITICAL] /opt/mysql/bin/mysqld: Disk is full writing '/mysqllog/binlog/localhost-3306-bin.000020' (Errcode: 28). Waiting for someone to free space... Retry in 60 secs" \
| map search="|makeresults count=1 | eval _raw=$logline$ | collect index=mysql host=$tmphost$ sourcetype=mysqld source="/usr/local/mysql/logs/mysqld.log" testmode=false"

[mysql_error_generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-39 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_view = search
search = | makeresults count=100 \
| streamstats count \
| eval count = (count % 4) + 1\
| eval count = substr("00", 0, max(2-len(count), 0)) . count \
| eval tmphost="SLG_DC_1_MySQL-".count \
| eval logline=strftime(_time, "%Y/%m/%d %H:%M:%S") +" [CRITICAL] /opt/mysql/bin/mysqld: Disk is full writing '/mysqllog/binlog/localhost-3306-bin.000020' (Errcode: 28). Waiting for someone to free space... Retry in 60 secs" \
| map search="|makeresults count=1 | eval _raw=$logline$ | collect index=mysql host=$tmphost$ sourcetype=mysqld source="/usr/local/mysql/logs/mysqld.log" testmode=false"

[Hi ED RUM Generator]
display.page.search.mode = fast
search = | makeresults count=1 \
| eval operationrand=random()%7 \
| eval nodetyperand=random()%2 \
| eval metric_name:rum.page_view.count = random()%1000 \
| eval metric_name:rum.client_error.count = round('metric_name:rum.page_view.count'/10000) \
| eval metric_name:rum.page_view.time.ns.p75 = random()%4+5 \
| eval metric_name:rum.resource_request.count = (random()%100)/100 \
| eval metric_name:rum.webvitals_lcp.time.ns.p75 = random()%50+400 \
| eval metric_name:rum.resource_request.time.ns.p75 = random()%5+4\
| eval metric_name:rum.webvitals_fid.time.ns.p75 = (1 + random()%1000/1000) \
| eval metric_name:rum.webvitals_cls.score.p75 = random()%1000/1000 \
| eval app="course-registration" \
| eval computationId="FskgDsKA4AQ" \
| eval country="USA" \
| eval sf_environment="course-registration" \
| eval sf_node_type=case(nodetyperand==0,"provider", nodetyperand==1,"view") \
| eval sf_operation=case(operationrand==0, "HTTP POST", operationrand==1, "console.error", operationrand==2, "documentFetch", operationrand==3, "documentLoad", operationrand==4, "onerror", operationrand==5, "resourceFetch", operationrand==6, "webvitals") \
| eval sf_organizationID="FgpBtZ0A0AA" \
| eval sf_product="web" \
| eval sf_realm="us1" \
| eval sf_resolutionMs=30000 \
| eval sf_ua_browsername="Chrome" \
| eval sf_ua_osname="Mac OS X" \
| eval entity_type="RUM Browser Metrics" \
| fields - operationrand - nodetyperand \
| mcollect index=sim_metrics

[SLG APM Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = * * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 \
    [| makeresults count=1 \
        `apm_base(\"license-class-selector\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_counts" \
    | eval metric_name:service.request.count=50 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license-class-selector\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_counts" \
    | eval metric_name:service.request.count=1 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license-class-selector\")` \
    | eval sf_streamLabel="thruput_avg_rate" \
    | eval metric_name:service.request.count=0.12 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license-class-selector\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_durations" \
    | eval metric_name:service.request.ns.median=6000000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license-class-selector\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_durations" \
    | eval metric_name:service.request.ns.median=100000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license-class-selector\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_durations_p99" \
    | eval metric_name:service.request.ns.p99=6000000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license-class-selector\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_durations_p99" \
    | eval metric_name:service.request.ns.p99=100000000 \
    | mcollect index=sim_metrics]

[HiEd APM Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = * * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 \
    [| makeresults count=1 \
        `apm_base(\"course-registration\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_counts" \
    | eval metric_name:service.request.count=50 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course-registration\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_counts" \
    | eval metric_name:service.request.count=1 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course-registration\")` \
    | eval sf_streamLabel="thruput_avg_rate" \
    | eval metric_name:service.request.count=0.12 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course-registration\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_durations" \
    | eval metric_name:service.request.ns.median=6000000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course-registration\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_durations" \
    | eval metric_name:service.request.ns.median=100000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course-registration\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_durations_p99" \
    | eval metric_name:service.request.ns.p99=6000000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course-registration\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_durations_p99" \
    | eval metric_name:service.request.ns.p99=100000000 \
    | mcollect index=sim_metrics]