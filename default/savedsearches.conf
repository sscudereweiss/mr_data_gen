### Nagios

[EDU Nagios Event Storm]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-29/1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=500 \
| streamstats count \
| eval ping =  round(0,3) \
| eval ping2= round(0,3) \
| eval rta = 0 \
| eval rta_rounded=round(rta,2) \
| eval server="EDU_DC_1_Router_" . count\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Unavailable - Ping \t".$ping$."\t".$ping2$."\tPING CRITICAL - Packet loss = 100%, RTA = ".$rta_rounded$." ms\trta=".$rta$."ms;0.000000;0.000000;0.000000 pl=0%;2;5;0" \
| fields - count - ping - ping2 - rta - rta_rounded - server \
| map maxsearches=500 search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""

[EDU Nagios Clear Event Storm]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 30-59/10 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=500 \
| streamstats count \
| eval ping = 4.013+(random()%10/1000) \
| eval ping2= round((random()%3+1)/1000,3) \
| eval rta = 1.320000 + (random()%10/1000) \
| eval rta_rounded=round(rta,2) \
| eval server="EDU_DC_1_Router_" . count\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping \t".$ping$."\t".$ping2$."\tPING OK - Packet loss = 100%, RTA = ".$rta_rounded$." ms\trta=".$rta$."ms;0.000000;0.000000;0.000000 pl=0%;2;5;0" \
| fields - count - ping - ping2 - rta - rta_rounded - server \
| map maxsearches=500 search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""

[EDU Nagios Stable Alerts]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-39/10 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 \
| streamstats count \
| eval count = (count % 4)+1 \
| eval ping = 4.013+(random()%10/1000) \
| eval ping2= round((random()%3+1)/1000,3) \
| eval rta = 1.320000 + (random()%10/1000) \
| eval rta_rounded=round(rta,2) \
| eval server="EDU_DC_1_LoadBalancer"\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping \t".$ping$."\t".$ping2$."\tPING OK - Packet loss = 0%, RTA = ".$rta_rounded$." ms\trta=".$rta$."ms;10.000000;20.000000;0.000000 pl=0%;2;5;0" \
| fields - count - ping - ping2 - rta - rta_rounded - server \
| map maxsearches=500 search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""

[EDU Nagios Unstable Alerts]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 40-59/1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=5 \
| streamstats count \
| eval count = (count % 4)+1 \
| eval ping =  round(0,3) \
| eval ping2= round(0,3) \
| eval rta = 0 \
| eval rta_rounded=round(rta,2) \
| eval server="EDU_DC_1_LoadBalancer"\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Unavailable - Ping \t".$ping$."\t".$ping2$."\tPING CRITICAL - Packet loss = 100%, RTA = ".$rta_rounded$." ms\trta=".$rta$."ms;0.000000;0.000000;0.000000 pl=0%;2;5;0" \
| fields - count - ping - ping2 - rta - rta_rounded - server \
| map maxsearches=500 search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""

[SLG Nagios Event Storm]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 40-59/1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=500 \
| streamstats count \
| eval ping =  round(0,3) \
| eval ping2= round(0,3) \
| eval rta = 0 \
| eval rta_rounded=round(rta,2) \
| eval server="SLG_DC_1_Router_" . count\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Unavailable - Ping \t".$ping$."\t".$ping2$."\tPING CRITICAL - Packet loss = 100%, RTA = ".$rta_rounded$." ms\trta=".$rta$."ms;0.000000;0.000000;0.000000 pl=0%;2;5;0" \
| fields - count - ping - ping2 - rta - rta_rounded - server \
| map maxsearches=500 search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""

[SLG Nagios Stable Alerts]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 0-39/10 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 \
| streamstats count \
| eval count = (count % 4)+1 \
| eval ping = 4.013+(random()%10/1000) \
| eval ping2= round((random()%3+1)/1000,3) \
| eval rta = 1.320000 + (random()%10/1000) \
| eval rta_rounded=round(rta,2) \
| eval server="SLG_DC_1_LoadBalancer"\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Available - Ping \t".$ping$."\t".$ping2$."\tPING OK - Packet loss = 0%, RTA = ".$rta_rounded$." ms\trta=".$rta$."ms;10.000000;20.000000;0.000000 pl=0%;2;5;0" \
| fields - count - ping - ping2 - rta - rta_rounded - server \
| map maxsearches=500 search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""

[SLG Nagios Unstable Alerts]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 40-59/1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=5 \
| streamstats count \
| eval count = (count % 4)+1 \
| eval ping =  round(0,3) \
| eval ping2= round(0,3) \
| eval rta = 0 \
| eval rta_rounded=round(rta,2) \
| eval server="SLG_DC_1_LoadBalancer"\
| eval host=server \
| eval logline="[SERVICEPERFDATA]\t".now()."\t".$server$."\tHost Unavailable - Ping \t".$ping$."\t".$ping2$."\tPING CRITICAL - Packet loss = 100%, RTA = ".$rta_rounded$." ms\trta=".$rta$."ms;0.000000;0.000000;0.000000 pl=0%;2;5;0" \
| fields - count - ping - ping2 - rta - rta_rounded - server \
| map maxsearches=500 search="| makeresults count=1 | eval _raw=$logline$ | collect index=\"nagios\" host=$host$ sourcetype=\"nagios:core:serviceperf\" source=\"/usr/local/nagios/var/service-perfdata\""

### Entity Generators

[Hi_ED DC 1 Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search
schedule_priority = highest
search = | makeresults count=1 `generate_linux_entities(4, \"EDU_DC_1_Authorization\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"EDU_DC_1_MySQL\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"EDU_DC_1_Course_Picker\", \"itsi_im_metrics\")` `generate_windows_entities(4, \"EDU_DC_1_IIS\", \"itsi_im_metrics\")`

[Hi_ED DC 2 Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search
schedule_priority = highest
search = | makeresults count=1 `generate_linux_entities(4, \"EDU_DC_2_Authorization\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"EDU_DC_2_MySQL\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"EDU_DC_2_Course_Picker\", \"itsi_im_metrics\")` `generate_windows_entities(4, \"EDU_DC_2_IIS\", \"itsi_im_metrics\")`

[SLG DC 1 Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search
schedule_priority = highest
search = | makeresults count=1 `generate_linux_entities(4, \"SLG_DC_1_Authorization\", \"itsi_im_metrics\")` `generate_linux_entities_unstable(4, \"SLG_DC_1_MySQL\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"SLG_DC_1_License_Class_Selector\", \"itsi_im_metrics\")` `generate_linux_entities(2, \"SLG_DC_1_Load_Balancer\", \"itsi_im_metrics\")` `generate_windows_entities(4, \"SLG_DC_1_IIS\", \"itsi_im_metrics\")`

[SLG DC 2 Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search
schedule_priority = highest
search = | makeresults count=1 `generate_linux_entities(4, \"SLG_DC_2_Authorization\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"SLG_DC_2_MySQL\", \"itsi_im_metrics\")` `generate_linux_entities(4, \"SLG_DC_2_License_Class_Selector\", \"itsi_im_metrics\")` `generate_linux_entities(2, \"SLG_DC_2_Load_Balancer\", \"itsi_im_metrics\")` `generate_windows_entities(4, \"SLG_DC_2_IIS\", \"itsi_im_metrics\")`

### RUM

[Hi ED RUM Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 `rum_metrics(\"course_registration\")` | mcollect index=sim_metrics

[SLG RUM Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 `rum_metrics(\"license_renewal\")` | mcollect index=sim_metrics

### APM

[SLG APM Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = * * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 \
    [| makeresults count=1 \
        `apm_base(\"license_renewal\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_counts" \
    | eval metric_name:service.request.count=50 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license_renewal\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_counts" \
    | eval metric_name:service.request.count=1 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license_renewal\")` \
    | eval sf_streamLabel="thruput_avg_rate" \
    | eval metric_name:service.request.count=0.12 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license_renewal\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_durations" \
    | eval metric_name:service.request.ns.median=6000000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license_renewal\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_durations" \
    | eval metric_name:service.request.ns.median=100000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license_renewal\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_durations_p99" \
    | eval metric_name:service.request.ns.p99=6000000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"license_renewal\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_durations_p99" \
    | eval metric_name:service.request.ns.p99=100000000 \
    | mcollect index=sim_metrics]

[HiEd APM Generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = * * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = mr_data_gen
request.ui_dispatch_view = search
search = | makeresults count=1 \
    [| makeresults count=1 \
        `apm_base(\"course_registration\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_counts" \
    | eval metric_name:service.request.count=50 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course_registration\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_counts" \
    | eval metric_name:service.request.count=1 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course_registration\")` \
    | eval sf_streamLabel="thruput_avg_rate" \
    | eval metric_name:service.request.count=0.12 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course_registration\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_durations" \
    | eval metric_name:service.request.ns.median=6000000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course_registration\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_durations" \
    | eval metric_name:service.request.ns.median=100000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course_registration\")` \
    | eval sf_error="false" \
    | eval sf_streamLabel="non_error_durations_p99" \
    | eval metric_name:service.request.ns.p99=6000000000 \
    | mcollect index=sim_metrics] \
    [| makeresults count=1 \
        `apm_base(\"course_registration\")` \
    | eval sf_error="true" \
    | eval sf_streamLabel="error_durations_p99" \
    | eval metric_name:service.request.ns.p99=100000000 \
    | mcollect index=sim_metrics]

### MySQL

[slg_mysql_error_generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 40-59/1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_view = search
search = | makeresults count=4 \
| streamstats count \
| eval count = (count % 4) + 1\
| eval count = substr("00", 0, max(2-len(count), 0)) . count \
| eval tmphost="SLG_DC_1_MySQL_".count \
| eval logline=strftime(_time, "%Y/%m/%d %H:%M:%S") +" [CRITICAL] /opt/mysql/bin/mysqld: Disk is full writing '/mysqllog/binlog/localhost-3306-bin.000020' (Errcode: 28). Waiting for someone to free space... Retry in 60 secs" \
| map maxsearches=100 search="|makeresults count=1 | eval _raw=$logline$ | collect index=mysql host=$tmphost$ sourcetype=mysqld source="/usr/local/mysql/logs/mysqld.log""

[hi_ed_mysql_error_generator]
action.email.useNSSubject = 1
action.webhook.enable_allowlist = 0
alert.track = 0
cron_schedule = 40-59/1 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_view = search
search = | makeresults count=4 \
| streamstats count \
| eval count = (count % 4) + 1\
| eval count = substr("00", 0, max(2-len(count), 0)) . count \
| eval tmphost="EDU_DC_1_MySQL_".count \
| eval logline=strftime(_time, "%Y/%m/%d %H:%M:%S") +" [CRITICAL] /opt/mysql/bin/mysqld: Disk is full writing '/mysqllog/binlog/localhost-3306-bin.000020' (Errcode: 28). Waiting for someone to free space... Retry in 60 secs" \
| map maxsearches=100 search="|makeresults count=1 | eval _raw=$logline$ | collect index=mysql host=$tmphost$ sourcetype=mysqld source="/usr/local/mysql/logs/mysqld.log""


